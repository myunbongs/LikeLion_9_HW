🦁멋쟁이 사자 1주차 과제🦁

1강. 오리엔테이션
전체적인 강의 목차와 진행에 대한 설명
내가 생각하는 중요한 말씀 : 개발에 재미를 들여라, 강의를 보고 내 손으로 직접 쳐보자, 코드 라이언을 잘 활용하자

2강. Web&Web Service
1. 웹서비스란 쉽게 생각하면 ‘요청에 응답하는 서버’이다. Ex) 식당에서 주문했을때 음식을 주는 사장님 = 서버
2. 서버 = serve라는 단어에서 파생된 말 처럼 요청한 무엇인가를 제공하는 시스템이다.
3. Client(정보 요청) - Server(응답) 관계 이해
4. 따라서 웹서비스를 만든 다는 것 = 점원의 역할을 하는 것
5. 요청(Request)의 종류 = 갖다 줘(get), 처리해 줘(post) 
Ex)네이버를 켜고 웹툰을 본 다음 재미있다고 댓글을 달았다.                                                                                  갖다 줘             갖다 줘                    처리해 줘
6. 요청과 응답을 주고 받을 때 HTML문서가 오간다.(실제로는 다양한 문서가 오고감)
7. P2P = 모두가 서버이고 모두가 클라이언트
8. Web(Word Wide Web)=인터넷 - 모든게(정보) 얽히고 얽혀있음
9. 평소 우리가 아는 인터넷 = 웹브라우저 - 요청과 응답 사이의 통로 역할

3강. 웹 서비스를 만드는 방법
서버 컴퓨터 = 신경 써야할 부분만 확실히 신경 쓴 컴퓨터
서버 컴퓨터의 조건 1. 365일 24시간 제공 가능해야함
                            2. 클라이언트 수 고려
                            3. 발열 냉각장치
                            4. 보안
                            5. 빠른 컴퓨팅 능력
서버가 되기 위한 두가지 방법
내 컴퓨터를 서버로 컴퓨터화 시키기(아파치,iis) - 설치 까다로움, 추가적 지식요규, 한 번 익히면 자유로운 개발 가능
 이 세상 어디간의 서버컴퓨터 빌리기(웹포스팅 업체 Github, AWS c9) - 설치 조작 단순, 과금 발생, 개발 제약 o, 클라이언트 수 고려x

4강. HTML(1)
HTML - 이해가 쉽다, 정형화된 문법, 쓰이는 문법 맨날 쓰임
=Hyper Text Markup Language            Hyper Text = Link
                                                             Markup Language = 컴퓨터가 알아 들을 수 있는 언어
브라우저를 통해 HTML 문서가 오갈 때 문서 그대로 받아들이지 않고, 줄 글처럼 받아들임 → 일일이 설명 
글, 글을 감싸는 틀, 틀에 붙는 부가설명 = 글, 태그, 속성

5강. HTML(2)
대원칙 HTML로 꾸미려 들지 말자 꾸미는 언어는 CSS 
HTML = 정보마킹   CSS = 꾸미기
문서의 일부를 설명해주기 위한 HTML
문서의 전체를 설명해주기 위한 HTML
HTML 코드
이거 HTML 문서야를 알려주는 태그 = <!doctype html>, <html lang=“ko”></html>
직접 화면에 등장하진 않지만 문서에 보이는 태그 = <head></head>
직접적으로 화면에 등장하는 문서에서 보이는 태그 = <body></body>
사용자로부터 입력값을 받아들이는 태그 = form        입력값 처리 프로그램 있을 수 있음(Ex 아이디 비번을 넘겨줘야하는 작업)  form action = “전송받을 대상”

6강. HTML(3)
<h1~></h> = 중요도에 따른 크기(?)
<form></form> = 사용자로부터 입력을 받을 수 있게하는 태그
<br> = 줄바꿈
<img src=“~”> = 이미지를 넣을때 사용한는 태그 ~에는 이미지 파일 입력
<select>~</select> = ~칸에 사용자가 옵션을 선택할 수 있게 만드는 태그
<option value=“~”></option> = value 뒤에는 컴퓨터가 이렇게 이해하면 된다라는 것을 입력(Ex value = soso → soso라고 이해하면 돼~), option 태그는 말그대로 사용자가 선택할 수 있는 옵션을 추가하는 태그
<ol></ol> = 이 태그 사이에 쓴 항목은 앞에 자동으로 1. 2. 3. ~ 순서가 붙여지는 태그
<li></li> = list의 약자 리스트를 나타낼때 쓰는 태그
<a href	“~”></a> = 링크를 연결할때 쓰는 태그
<height=“~”> = 사진의 높이를 조절하여 알맞게 조절해주는 태그 
<width=“~”> = 사진의 너비를 조절하여 알맞게 조절해주는 태그
<textarea cols=“~” rows=“~”> = 말을 입력할 수 있는 칸을 조절해주는 태그
<input type="text" name=“~"> = 말을 입력할 수 있는 칸을 만들어주는 태그
<input type="password" name=“~”> = 패스워드를 입력할 수 있는 칸을 만들어주는 태그(****로 표시됨)
<input type=“submit"> = 제출 버튼을 만들어주는 태그

7강 Bootstrap
부트스트랩 = CSS/자바스크립트 기반 웹 프레임워크(웹을 만드는 재료들 모음)
공짜!, 반응형 웹 지원(자동화면조정), 브라우저 호환성 
딱 보면 티남, 성능이 다소 떨어짐
부트스트랩 사용 방법 배움

8강 Github배포
3+1의 기능
코드 저장 가능
2.  Undo 기능(실수 했을때 이전상태로 되돌아가는 기능
3. 협업기능
+Web hosting 기능(3강 참고)


9강 Git사용법
git= 게임의 세이브, 공유 가능
Echo “~” = 파일을 만들고 ~라고 적어라
git init - 현재 디렉토리를 새로운 Git 저장소로 초기화
             두 개 프로젝트 진행할때(깃으로 관리) 독립적 관리 해야됨 = 두번 git init을 해줘야함
git add = 스테이징 아리아에 파일을 기록하고 저장하는것
파일의 저장 순서
1.저장할 파일 선택
2.선택한 파일 지정
staging area 에 파일을 넣고 전제적으로 저장 add명령어는 파일 추가하는 명령어
git status 현재 깃의 상태 볼 수 있는 명령어
git commit -m “message” staging area에 올린 파일들을 저장해주는 명령어
Branch = 현재 작업중인 프로젝트에서 새로운 분기점을 만드는 것 (새로운 아이디어 생각날때, 다른 사람들과 협업할때) 
새로운 브렌치 만들때 = git branch “브렌치 이름”
git remote add [remote 이름][repository 주소] = 래포토리주소의  코드를 업로드, 다운로드를 가능 하게 하는 명령어
git push [remote 이름][branch 이름] = Github에 올려주는 명령어
이외에도 다양한 명령어가 있음 - 구글링을 찾을 것
